#!/bin/bash
# NAME
#     create-service -  Create a new service
#
# SYNOPSIS
#     create-service
#     create-service <service name>
#
# DESCRIPTION
#     Creates and configures a new service (with an EC2 instance, autoscaling group, security group, etc)

set -e # Exit immediately if a command exits with a non-zero status.
set -u # Treat unset variables as an error when substituting.

BIN_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}")"; pwd -P )"; source "$BIN_DIR/../include/common"

if [[ $# -eq 0 ]]; then
    service=$( prompt "Service name: " )
elif [[ $# -eq 1 ]]; then
    if [[ "$1" = "-h" || "$1" = "--help" || "$1" = "help" ]]; then
	help_text
    fi
    service="$1"
else
    help_text
    exit 0
fi

applicationRoot=$( findApplicationRoot )
serviceRoot="$applicationRoot/services/$service"

loadApplicationProperties "$applicationRoot"

if [[ -d "$serviceRoot" ]]; then
    echo "-- Found service already exists at $serviceRoot"
elif [[ -f "$serviceRoot" ]]; then
    echo "-- Unable to create service at $serviceRoot, please remove $serviceRoot file and retry"
else
    echo "-- Creating new service at $serviceRoot"
    mkdir -p "$serviceRoot"
fi

templateDir=$( cd "$BIN_DIR/../templates/service"; pwd -P )
if [[ -e "$serviceRoot/aws.properties" ]]; then
    echo "---- Found existing aws.properties in $serviceRoot"
else
    echo "---- Creating $serviceRoot/aws.properties"
    cat "$templateDir/aws.properties" | sed "s|__SERVICE__|$service|g" | sed "s|__APPLICATION_ROOT__|$applicationRoot|g" > "$serviceRoot/aws.properties"
fi

configDir="$serviceRoot/aws.config"
if [[ -e "$configDir" ]]; then
    echo "---- Found existing config dir at $configDir"
else
    echo "---- Creating $configDir"
    mkdir -p "$configDir"
fi

if [[ -e "$configDir/codedeploy" ]]; then
    echo "---- Found existing codedeploy"
else
    echo "---- Copying default codedeploy templates to $configDir"
    cp -r "$templateDir/codedeploy" "$configDir/"
fi

if [[ -e "$configDir/ec2bootstrap.sh" ]]; then
    echo "---- Found existing ec2bootstrap.sh"
else
    echo "---- Copying ec2 bootstrap script to $configDir"
    cat "$templateDir/ec2bootstrap.sh" | perl -0pe "s|__EC2_USER_PUBLIC_KEYS__|$EC2_USER_PUBLIC_KEYS|" > "$configDir/ec2bootstrap.sh"
fi

affirm "-- Configure AWS (including an EC2 instance) now?"

cd "$serviceRoot" && aws-app configure-service
